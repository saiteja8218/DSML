{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNE8kKcgvnGaAqfPqdPZVsO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["The dataset contains 36733 instances of 11 sensor measures aggregated over one hour (by means of average or sum) from a gas turbine"],"metadata":{"id":"PG3sozb2-keQ"}},{"cell_type":"markdown","source":["The Dataset includes gas turbine parameters (such as Turbine Inlet Temperature and Compressor Discharge pressure) in addition to the ambient variables."],"metadata":{"id":"L3zHxSLX-o8v"}},{"cell_type":"markdown","source":["predicting turbine energy yield (TEY) using ambient variables as features.\n"],"metadata":{"id":"Ng90Air4-wPE"}},{"cell_type":"code","source":["from google.colab import files\n","upload=files.upload()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"zlFpEc22-yz3","executionInfo":{"status":"ok","timestamp":1701024920030,"user_tz":-330,"elapsed":37893,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"70e2cea6-83dd-4e18-c024-eca6fe9a25bc"},"execution_count":1,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-9743337f-d426-40cf-9eab-e15964832b54\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-9743337f-d426-40cf-9eab-e15964832b54\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving gas_turbines.csv to gas_turbines.csv\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","df=pd.read_csv(\"gas_turbines.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"4mGqSB3y-6kt","executionInfo":{"status":"ok","timestamp":1701024920716,"user_tz":-330,"elapsed":688,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"f095e9d4-2442-4a91-d88f-ca07ab8c22ec"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           AT      AP      AH    AFDP    GTEP     TIT     TAT     TEY     CDP  \\\n","0      6.8594  1007.9  96.799  3.5000  19.663  1059.2  550.00  114.70  10.605   \n","1      6.7850  1008.4  97.118  3.4998  19.728  1059.3  550.00  114.72  10.598   \n","2      6.8977  1008.8  95.939  3.4824  19.779  1059.4  549.87  114.71  10.601   \n","3      7.0569  1009.2  95.249  3.4805  19.792  1059.6  549.99  114.72  10.606   \n","4      7.3978  1009.7  95.150  3.4976  19.765  1059.7  549.98  114.72  10.612   \n","...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n","15034  9.0301  1005.6  98.460  3.5421  19.164  1049.7  546.21  111.61  10.400   \n","15035  7.8879  1005.9  99.093  3.5059  19.414  1046.3  543.22  111.78  10.433   \n","15036  7.2647  1006.3  99.496  3.4770  19.530  1037.7  537.32  110.19  10.483   \n","15037  7.0060  1006.8  99.008  3.4486  19.377  1043.2  541.24  110.74  10.533   \n","15038  6.9279  1007.2  97.533  3.4275  19.306  1049.9  545.85  111.58  10.583   \n","\n","           CO     NOX  \n","0      3.1547  82.722  \n","1      3.2363  82.776  \n","2      3.2012  82.468  \n","3      3.1923  82.670  \n","4      3.2484  82.311  \n","...       ...     ...  \n","15034  4.5186  79.559  \n","15035  4.8470  79.917  \n","15036  7.9632  90.912  \n","15037  6.2494  93.227  \n","15038  4.9816  92.498  \n","\n","[15039 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-c46e7509-46db-4c7b-9f40-528f75ed8d81\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AT</th>\n","      <th>AP</th>\n","      <th>AH</th>\n","      <th>AFDP</th>\n","      <th>GTEP</th>\n","      <th>TIT</th>\n","      <th>TAT</th>\n","      <th>TEY</th>\n","      <th>CDP</th>\n","      <th>CO</th>\n","      <th>NOX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.8594</td>\n","      <td>1007.9</td>\n","      <td>96.799</td>\n","      <td>3.5000</td>\n","      <td>19.663</td>\n","      <td>1059.2</td>\n","      <td>550.00</td>\n","      <td>114.70</td>\n","      <td>10.605</td>\n","      <td>3.1547</td>\n","      <td>82.722</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.7850</td>\n","      <td>1008.4</td>\n","      <td>97.118</td>\n","      <td>3.4998</td>\n","      <td>19.728</td>\n","      <td>1059.3</td>\n","      <td>550.00</td>\n","      <td>114.72</td>\n","      <td>10.598</td>\n","      <td>3.2363</td>\n","      <td>82.776</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6.8977</td>\n","      <td>1008.8</td>\n","      <td>95.939</td>\n","      <td>3.4824</td>\n","      <td>19.779</td>\n","      <td>1059.4</td>\n","      <td>549.87</td>\n","      <td>114.71</td>\n","      <td>10.601</td>\n","      <td>3.2012</td>\n","      <td>82.468</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.0569</td>\n","      <td>1009.2</td>\n","      <td>95.249</td>\n","      <td>3.4805</td>\n","      <td>19.792</td>\n","      <td>1059.6</td>\n","      <td>549.99</td>\n","      <td>114.72</td>\n","      <td>10.606</td>\n","      <td>3.1923</td>\n","      <td>82.670</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.3978</td>\n","      <td>1009.7</td>\n","      <td>95.150</td>\n","      <td>3.4976</td>\n","      <td>19.765</td>\n","      <td>1059.7</td>\n","      <td>549.98</td>\n","      <td>114.72</td>\n","      <td>10.612</td>\n","      <td>3.2484</td>\n","      <td>82.311</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15034</th>\n","      <td>9.0301</td>\n","      <td>1005.6</td>\n","      <td>98.460</td>\n","      <td>3.5421</td>\n","      <td>19.164</td>\n","      <td>1049.7</td>\n","      <td>546.21</td>\n","      <td>111.61</td>\n","      <td>10.400</td>\n","      <td>4.5186</td>\n","      <td>79.559</td>\n","    </tr>\n","    <tr>\n","      <th>15035</th>\n","      <td>7.8879</td>\n","      <td>1005.9</td>\n","      <td>99.093</td>\n","      <td>3.5059</td>\n","      <td>19.414</td>\n","      <td>1046.3</td>\n","      <td>543.22</td>\n","      <td>111.78</td>\n","      <td>10.433</td>\n","      <td>4.8470</td>\n","      <td>79.917</td>\n","    </tr>\n","    <tr>\n","      <th>15036</th>\n","      <td>7.2647</td>\n","      <td>1006.3</td>\n","      <td>99.496</td>\n","      <td>3.4770</td>\n","      <td>19.530</td>\n","      <td>1037.7</td>\n","      <td>537.32</td>\n","      <td>110.19</td>\n","      <td>10.483</td>\n","      <td>7.9632</td>\n","      <td>90.912</td>\n","    </tr>\n","    <tr>\n","      <th>15037</th>\n","      <td>7.0060</td>\n","      <td>1006.8</td>\n","      <td>99.008</td>\n","      <td>3.4486</td>\n","      <td>19.377</td>\n","      <td>1043.2</td>\n","      <td>541.24</td>\n","      <td>110.74</td>\n","      <td>10.533</td>\n","      <td>6.2494</td>\n","      <td>93.227</td>\n","    </tr>\n","    <tr>\n","      <th>15038</th>\n","      <td>6.9279</td>\n","      <td>1007.2</td>\n","      <td>97.533</td>\n","      <td>3.4275</td>\n","      <td>19.306</td>\n","      <td>1049.9</td>\n","      <td>545.85</td>\n","      <td>111.58</td>\n","      <td>10.583</td>\n","      <td>4.9816</td>\n","      <td>92.498</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15039 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c46e7509-46db-4c7b-9f40-528f75ed8d81')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c46e7509-46db-4c7b-9f40-528f75ed8d81 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c46e7509-46db-4c7b-9f40-528f75ed8d81');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d08ee4db-1c80-4dc1-8e74-5acc1c8d16b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d08ee4db-1c80-4dc1-8e74-5acc1c8d16b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d08ee4db-1c80-4dc1-8e74-5acc1c8d16b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["\n","df.isna().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W8GhVY9R_FK5","executionInfo":{"status":"ok","timestamp":1701024934986,"user_tz":-330,"elapsed":419,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"2b11ee56-a422-43d3-8c57-08426ea64504"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AT      0\n","AP      0\n","AH      0\n","AFDP    0\n","GTEP    0\n","TIT     0\n","TAT     0\n","TEY     0\n","CDP     0\n","CO      0\n","NOX     0\n","dtype: int64"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["\n","df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"sw-YxsIx_N-0","executionInfo":{"status":"ok","timestamp":1701024951919,"user_tz":-330,"elapsed":407,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"8f6783ff-e8d2-46e0-ce8f-122259e3e226"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            AT        AP        AH      AFDP      GTEP       TIT       TAT  \\\n","AT    1.000000 -0.412953 -0.549432 -0.099333 -0.049103  0.093067  0.338569   \n","AP   -0.412953  1.000000  0.042573  0.040318  0.078575  0.029650 -0.223479   \n","AH   -0.549432  0.042573  1.000000 -0.119249 -0.202784 -0.247781  0.010859   \n","AFDP -0.099333  0.040318 -0.119249  1.000000  0.744251  0.627254 -0.571541   \n","GTEP -0.049103  0.078575 -0.202784  0.744251  1.000000  0.874526 -0.756884   \n","TIT   0.093067  0.029650 -0.247781  0.627254  0.874526  1.000000 -0.357320   \n","TAT   0.338569 -0.223479  0.010859 -0.571541 -0.756884 -0.357320  1.000000   \n","TEY  -0.207495  0.146939 -0.110272  0.717995  0.977042  0.891587 -0.720356   \n","CDP  -0.100705  0.131198 -0.182010  0.727152  0.993784  0.887238 -0.744740   \n","CO   -0.088588  0.041614  0.165505 -0.334207 -0.508259 -0.688272  0.063404   \n","NOX  -0.600006  0.256744  0.143061 -0.037299 -0.208496 -0.231636  0.009888   \n","\n","           TEY       CDP        CO       NOX  \n","AT   -0.207495 -0.100705 -0.088588 -0.600006  \n","AP    0.146939  0.131198  0.041614  0.256744  \n","AH   -0.110272 -0.182010  0.165505  0.143061  \n","AFDP  0.717995  0.727152 -0.334207 -0.037299  \n","GTEP  0.977042  0.993784 -0.508259 -0.208496  \n","TIT   0.891587  0.887238 -0.688272 -0.231636  \n","TAT  -0.720356 -0.744740  0.063404  0.009888  \n","TEY   1.000000  0.988473 -0.541751 -0.102631  \n","CDP   0.988473  1.000000 -0.520783 -0.169103  \n","CO   -0.541751 -0.520783  1.000000  0.316743  \n","NOX  -0.102631 -0.169103  0.316743  1.000000  "],"text/html":["\n","  <div id=\"df-2fb8f147-f755-4f8d-bb24-8569024636b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AT</th>\n","      <th>AP</th>\n","      <th>AH</th>\n","      <th>AFDP</th>\n","      <th>GTEP</th>\n","      <th>TIT</th>\n","      <th>TAT</th>\n","      <th>TEY</th>\n","      <th>CDP</th>\n","      <th>CO</th>\n","      <th>NOX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>AT</th>\n","      <td>1.000000</td>\n","      <td>-0.412953</td>\n","      <td>-0.549432</td>\n","      <td>-0.099333</td>\n","      <td>-0.049103</td>\n","      <td>0.093067</td>\n","      <td>0.338569</td>\n","      <td>-0.207495</td>\n","      <td>-0.100705</td>\n","      <td>-0.088588</td>\n","      <td>-0.600006</td>\n","    </tr>\n","    <tr>\n","      <th>AP</th>\n","      <td>-0.412953</td>\n","      <td>1.000000</td>\n","      <td>0.042573</td>\n","      <td>0.040318</td>\n","      <td>0.078575</td>\n","      <td>0.029650</td>\n","      <td>-0.223479</td>\n","      <td>0.146939</td>\n","      <td>0.131198</td>\n","      <td>0.041614</td>\n","      <td>0.256744</td>\n","    </tr>\n","    <tr>\n","      <th>AH</th>\n","      <td>-0.549432</td>\n","      <td>0.042573</td>\n","      <td>1.000000</td>\n","      <td>-0.119249</td>\n","      <td>-0.202784</td>\n","      <td>-0.247781</td>\n","      <td>0.010859</td>\n","      <td>-0.110272</td>\n","      <td>-0.182010</td>\n","      <td>0.165505</td>\n","      <td>0.143061</td>\n","    </tr>\n","    <tr>\n","      <th>AFDP</th>\n","      <td>-0.099333</td>\n","      <td>0.040318</td>\n","      <td>-0.119249</td>\n","      <td>1.000000</td>\n","      <td>0.744251</td>\n","      <td>0.627254</td>\n","      <td>-0.571541</td>\n","      <td>0.717995</td>\n","      <td>0.727152</td>\n","      <td>-0.334207</td>\n","      <td>-0.037299</td>\n","    </tr>\n","    <tr>\n","      <th>GTEP</th>\n","      <td>-0.049103</td>\n","      <td>0.078575</td>\n","      <td>-0.202784</td>\n","      <td>0.744251</td>\n","      <td>1.000000</td>\n","      <td>0.874526</td>\n","      <td>-0.756884</td>\n","      <td>0.977042</td>\n","      <td>0.993784</td>\n","      <td>-0.508259</td>\n","      <td>-0.208496</td>\n","    </tr>\n","    <tr>\n","      <th>TIT</th>\n","      <td>0.093067</td>\n","      <td>0.029650</td>\n","      <td>-0.247781</td>\n","      <td>0.627254</td>\n","      <td>0.874526</td>\n","      <td>1.000000</td>\n","      <td>-0.357320</td>\n","      <td>0.891587</td>\n","      <td>0.887238</td>\n","      <td>-0.688272</td>\n","      <td>-0.231636</td>\n","    </tr>\n","    <tr>\n","      <th>TAT</th>\n","      <td>0.338569</td>\n","      <td>-0.223479</td>\n","      <td>0.010859</td>\n","      <td>-0.571541</td>\n","      <td>-0.756884</td>\n","      <td>-0.357320</td>\n","      <td>1.000000</td>\n","      <td>-0.720356</td>\n","      <td>-0.744740</td>\n","      <td>0.063404</td>\n","      <td>0.009888</td>\n","    </tr>\n","    <tr>\n","      <th>TEY</th>\n","      <td>-0.207495</td>\n","      <td>0.146939</td>\n","      <td>-0.110272</td>\n","      <td>0.717995</td>\n","      <td>0.977042</td>\n","      <td>0.891587</td>\n","      <td>-0.720356</td>\n","      <td>1.000000</td>\n","      <td>0.988473</td>\n","      <td>-0.541751</td>\n","      <td>-0.102631</td>\n","    </tr>\n","    <tr>\n","      <th>CDP</th>\n","      <td>-0.100705</td>\n","      <td>0.131198</td>\n","      <td>-0.182010</td>\n","      <td>0.727152</td>\n","      <td>0.993784</td>\n","      <td>0.887238</td>\n","      <td>-0.744740</td>\n","      <td>0.988473</td>\n","      <td>1.000000</td>\n","      <td>-0.520783</td>\n","      <td>-0.169103</td>\n","    </tr>\n","    <tr>\n","      <th>CO</th>\n","      <td>-0.088588</td>\n","      <td>0.041614</td>\n","      <td>0.165505</td>\n","      <td>-0.334207</td>\n","      <td>-0.508259</td>\n","      <td>-0.688272</td>\n","      <td>0.063404</td>\n","      <td>-0.541751</td>\n","      <td>-0.520783</td>\n","      <td>1.000000</td>\n","      <td>0.316743</td>\n","    </tr>\n","    <tr>\n","      <th>NOX</th>\n","      <td>-0.600006</td>\n","      <td>0.256744</td>\n","      <td>0.143061</td>\n","      <td>-0.037299</td>\n","      <td>-0.208496</td>\n","      <td>-0.231636</td>\n","      <td>0.009888</td>\n","      <td>-0.102631</td>\n","      <td>-0.169103</td>\n","      <td>0.316743</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fb8f147-f755-4f8d-bb24-8569024636b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2fb8f147-f755-4f8d-bb24-8569024636b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2fb8f147-f755-4f8d-bb24-8569024636b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc87c033-05cc-488c-b36d-3297c53f2244\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc87c033-05cc-488c-b36d-3297c53f2244')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc87c033-05cc-488c-b36d-3297c53f2244 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["\n","import seaborn as sns\n","sns.set_style(style=\"darkgrid\")\n","sns.pairplot(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1hKHtNzsSUTJ4hwUr5kh0oyX4BuzJkF6c"},"id":"IPBRv0cV_R8T","executionInfo":{"status":"ok","timestamp":1701025013471,"user_tz":-330,"elapsed":45670,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"c5a03112-309f-4a67-ca43-4acc40ea01d8"},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["X = df.drop(\"TEY\",axis = 1)\n","X\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Uu10TxlU_iqi","executionInfo":{"status":"ok","timestamp":1701025036928,"user_tz":-330,"elapsed":449,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"c01e4f4e-a5c7-4546-914e-15ec3d9bfb95"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           AT      AP      AH    AFDP    GTEP     TIT     TAT     CDP      CO  \\\n","0      6.8594  1007.9  96.799  3.5000  19.663  1059.2  550.00  10.605  3.1547   \n","1      6.7850  1008.4  97.118  3.4998  19.728  1059.3  550.00  10.598  3.2363   \n","2      6.8977  1008.8  95.939  3.4824  19.779  1059.4  549.87  10.601  3.2012   \n","3      7.0569  1009.2  95.249  3.4805  19.792  1059.6  549.99  10.606  3.1923   \n","4      7.3978  1009.7  95.150  3.4976  19.765  1059.7  549.98  10.612  3.2484   \n","...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n","15034  9.0301  1005.6  98.460  3.5421  19.164  1049.7  546.21  10.400  4.5186   \n","15035  7.8879  1005.9  99.093  3.5059  19.414  1046.3  543.22  10.433  4.8470   \n","15036  7.2647  1006.3  99.496  3.4770  19.530  1037.7  537.32  10.483  7.9632   \n","15037  7.0060  1006.8  99.008  3.4486  19.377  1043.2  541.24  10.533  6.2494   \n","15038  6.9279  1007.2  97.533  3.4275  19.306  1049.9  545.85  10.583  4.9816   \n","\n","          NOX  \n","0      82.722  \n","1      82.776  \n","2      82.468  \n","3      82.670  \n","4      82.311  \n","...       ...  \n","15034  79.559  \n","15035  79.917  \n","15036  90.912  \n","15037  93.227  \n","15038  92.498  \n","\n","[15039 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-625259fd-dac1-489c-b97a-b03c77d0283a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AT</th>\n","      <th>AP</th>\n","      <th>AH</th>\n","      <th>AFDP</th>\n","      <th>GTEP</th>\n","      <th>TIT</th>\n","      <th>TAT</th>\n","      <th>CDP</th>\n","      <th>CO</th>\n","      <th>NOX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.8594</td>\n","      <td>1007.9</td>\n","      <td>96.799</td>\n","      <td>3.5000</td>\n","      <td>19.663</td>\n","      <td>1059.2</td>\n","      <td>550.00</td>\n","      <td>10.605</td>\n","      <td>3.1547</td>\n","      <td>82.722</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.7850</td>\n","      <td>1008.4</td>\n","      <td>97.118</td>\n","      <td>3.4998</td>\n","      <td>19.728</td>\n","      <td>1059.3</td>\n","      <td>550.00</td>\n","      <td>10.598</td>\n","      <td>3.2363</td>\n","      <td>82.776</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6.8977</td>\n","      <td>1008.8</td>\n","      <td>95.939</td>\n","      <td>3.4824</td>\n","      <td>19.779</td>\n","      <td>1059.4</td>\n","      <td>549.87</td>\n","      <td>10.601</td>\n","      <td>3.2012</td>\n","      <td>82.468</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7.0569</td>\n","      <td>1009.2</td>\n","      <td>95.249</td>\n","      <td>3.4805</td>\n","      <td>19.792</td>\n","      <td>1059.6</td>\n","      <td>549.99</td>\n","      <td>10.606</td>\n","      <td>3.1923</td>\n","      <td>82.670</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.3978</td>\n","      <td>1009.7</td>\n","      <td>95.150</td>\n","      <td>3.4976</td>\n","      <td>19.765</td>\n","      <td>1059.7</td>\n","      <td>549.98</td>\n","      <td>10.612</td>\n","      <td>3.2484</td>\n","      <td>82.311</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15034</th>\n","      <td>9.0301</td>\n","      <td>1005.6</td>\n","      <td>98.460</td>\n","      <td>3.5421</td>\n","      <td>19.164</td>\n","      <td>1049.7</td>\n","      <td>546.21</td>\n","      <td>10.400</td>\n","      <td>4.5186</td>\n","      <td>79.559</td>\n","    </tr>\n","    <tr>\n","      <th>15035</th>\n","      <td>7.8879</td>\n","      <td>1005.9</td>\n","      <td>99.093</td>\n","      <td>3.5059</td>\n","      <td>19.414</td>\n","      <td>1046.3</td>\n","      <td>543.22</td>\n","      <td>10.433</td>\n","      <td>4.8470</td>\n","      <td>79.917</td>\n","    </tr>\n","    <tr>\n","      <th>15036</th>\n","      <td>7.2647</td>\n","      <td>1006.3</td>\n","      <td>99.496</td>\n","      <td>3.4770</td>\n","      <td>19.530</td>\n","      <td>1037.7</td>\n","      <td>537.32</td>\n","      <td>10.483</td>\n","      <td>7.9632</td>\n","      <td>90.912</td>\n","    </tr>\n","    <tr>\n","      <th>15037</th>\n","      <td>7.0060</td>\n","      <td>1006.8</td>\n","      <td>99.008</td>\n","      <td>3.4486</td>\n","      <td>19.377</td>\n","      <td>1043.2</td>\n","      <td>541.24</td>\n","      <td>10.533</td>\n","      <td>6.2494</td>\n","      <td>93.227</td>\n","    </tr>\n","    <tr>\n","      <th>15038</th>\n","      <td>6.9279</td>\n","      <td>1007.2</td>\n","      <td>97.533</td>\n","      <td>3.4275</td>\n","      <td>19.306</td>\n","      <td>1049.9</td>\n","      <td>545.85</td>\n","      <td>10.583</td>\n","      <td>4.9816</td>\n","      <td>92.498</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15039 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-625259fd-dac1-489c-b97a-b03c77d0283a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-625259fd-dac1-489c-b97a-b03c77d0283a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-625259fd-dac1-489c-b97a-b03c77d0283a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bb373e74-9ec3-4619-bd7f-05971f80d81d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb373e74-9ec3-4619-bd7f-05971f80d81d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bb373e74-9ec3-4619-bd7f-05971f80d81d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["Y = df[\"TEY\"]\n","Y\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JK1_TRye_m12","executionInfo":{"status":"ok","timestamp":1701025053806,"user_tz":-330,"elapsed":427,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"f8a1fcf6-a63d-4f49-8799-a0bd7a909881"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        114.70\n","1        114.72\n","2        114.71\n","3        114.72\n","4        114.72\n","          ...  \n","15034    111.61\n","15035    111.78\n","15036    110.19\n","15037    110.74\n","15038    111.58\n","Name: TEY, Length: 15039, dtype: float64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","SS=StandardScaler()\n","X=SS.fit_transform(X)\n","X=pd.DataFrame(X)\n","X\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"hxrSXOh2_qNw","executionInfo":{"status":"ok","timestamp":1701025067825,"user_tz":-330,"elapsed":438,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"e8150947-1eef-4ee7-fef8-b8be567fbbb2"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              0         1         2         3         4         5         6  \\\n","0     -1.439778 -0.826644  1.281436 -0.921232 -1.379101 -1.488376  0.585240   \n","1     -1.449601 -0.748647  1.304564 -0.921495 -1.363528 -1.482325  0.585240   \n","2     -1.434721 -0.686250  1.219086 -0.944385 -1.351309 -1.476275  0.568715   \n","3     -1.413702 -0.623853  1.169060 -0.946884 -1.348194 -1.464173  0.583969   \n","4     -1.368693 -0.545857  1.161883 -0.924389 -1.354663 -1.458123  0.582698   \n","...         ...       ...       ...       ...       ...       ...       ...   \n","15034 -1.153182 -1.185428  1.401860 -0.865850 -1.498657 -2.063184  0.103453   \n","15035 -1.303986 -1.138630  1.447753 -0.913470 -1.438759 -2.268905 -0.276638   \n","15036 -1.386267 -1.076233  1.476971 -0.951488 -1.410967 -2.789257 -1.026650   \n","15037 -1.420423 -0.998236  1.441590 -0.988848 -1.447624 -2.456474 -0.528337   \n","15038 -1.430734 -0.935839  1.334652 -1.016605 -1.464635 -2.051083  0.057689   \n","\n","              7         8         9  \n","0     -1.357331  0.532012  1.387845  \n","1     -1.363676  0.568733  1.393002  \n","2     -1.360957  0.552938  1.363586  \n","3     -1.356424  0.548933  1.382878  \n","4     -1.350985  0.574179  1.348591  \n","...         ...       ...       ...  \n","15034 -1.543161  1.145792  1.085751  \n","15035 -1.513247  1.293578  1.119943  \n","15036 -1.467922  2.695925  2.170062  \n","15037 -1.422598  1.924683  2.391165  \n","15038 -1.377273  1.354150  2.321539  \n","\n","[15039 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-520fa621-ff1a-41b2-bde0-951f24ea99bc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.439778</td>\n","      <td>-0.826644</td>\n","      <td>1.281436</td>\n","      <td>-0.921232</td>\n","      <td>-1.379101</td>\n","      <td>-1.488376</td>\n","      <td>0.585240</td>\n","      <td>-1.357331</td>\n","      <td>0.532012</td>\n","      <td>1.387845</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-1.449601</td>\n","      <td>-0.748647</td>\n","      <td>1.304564</td>\n","      <td>-0.921495</td>\n","      <td>-1.363528</td>\n","      <td>-1.482325</td>\n","      <td>0.585240</td>\n","      <td>-1.363676</td>\n","      <td>0.568733</td>\n","      <td>1.393002</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-1.434721</td>\n","      <td>-0.686250</td>\n","      <td>1.219086</td>\n","      <td>-0.944385</td>\n","      <td>-1.351309</td>\n","      <td>-1.476275</td>\n","      <td>0.568715</td>\n","      <td>-1.360957</td>\n","      <td>0.552938</td>\n","      <td>1.363586</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-1.413702</td>\n","      <td>-0.623853</td>\n","      <td>1.169060</td>\n","      <td>-0.946884</td>\n","      <td>-1.348194</td>\n","      <td>-1.464173</td>\n","      <td>0.583969</td>\n","      <td>-1.356424</td>\n","      <td>0.548933</td>\n","      <td>1.382878</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-1.368693</td>\n","      <td>-0.545857</td>\n","      <td>1.161883</td>\n","      <td>-0.924389</td>\n","      <td>-1.354663</td>\n","      <td>-1.458123</td>\n","      <td>0.582698</td>\n","      <td>-1.350985</td>\n","      <td>0.574179</td>\n","      <td>1.348591</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15034</th>\n","      <td>-1.153182</td>\n","      <td>-1.185428</td>\n","      <td>1.401860</td>\n","      <td>-0.865850</td>\n","      <td>-1.498657</td>\n","      <td>-2.063184</td>\n","      <td>0.103453</td>\n","      <td>-1.543161</td>\n","      <td>1.145792</td>\n","      <td>1.085751</td>\n","    </tr>\n","    <tr>\n","      <th>15035</th>\n","      <td>-1.303986</td>\n","      <td>-1.138630</td>\n","      <td>1.447753</td>\n","      <td>-0.913470</td>\n","      <td>-1.438759</td>\n","      <td>-2.268905</td>\n","      <td>-0.276638</td>\n","      <td>-1.513247</td>\n","      <td>1.293578</td>\n","      <td>1.119943</td>\n","    </tr>\n","    <tr>\n","      <th>15036</th>\n","      <td>-1.386267</td>\n","      <td>-1.076233</td>\n","      <td>1.476971</td>\n","      <td>-0.951488</td>\n","      <td>-1.410967</td>\n","      <td>-2.789257</td>\n","      <td>-1.026650</td>\n","      <td>-1.467922</td>\n","      <td>2.695925</td>\n","      <td>2.170062</td>\n","    </tr>\n","    <tr>\n","      <th>15037</th>\n","      <td>-1.420423</td>\n","      <td>-0.998236</td>\n","      <td>1.441590</td>\n","      <td>-0.988848</td>\n","      <td>-1.447624</td>\n","      <td>-2.456474</td>\n","      <td>-0.528337</td>\n","      <td>-1.422598</td>\n","      <td>1.924683</td>\n","      <td>2.391165</td>\n","    </tr>\n","    <tr>\n","      <th>15038</th>\n","      <td>-1.430734</td>\n","      <td>-0.935839</td>\n","      <td>1.334652</td>\n","      <td>-1.016605</td>\n","      <td>-1.464635</td>\n","      <td>-2.051083</td>\n","      <td>0.057689</td>\n","      <td>-1.377273</td>\n","      <td>1.354150</td>\n","      <td>2.321539</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15039 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-520fa621-ff1a-41b2-bde0-951f24ea99bc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-520fa621-ff1a-41b2-bde0-951f24ea99bc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-520fa621-ff1a-41b2-bde0-951f24ea99bc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-605f8bbc-3f39-44b8-842c-13e33c15a718\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-605f8bbc-3f39-44b8-842c-13e33c15a718')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-605f8bbc-3f39-44b8-842c-13e33c15a718 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["\n","from sklearn.model_selection import train_test_split\n","X_train,X_test,Y_train,Y_test=train_test_split(X,Y,random_state=42)\n"],"metadata":{"id":"uCNfFLhg_uSE","executionInfo":{"status":"ok","timestamp":1701025098132,"user_tz":-330,"elapsed":408,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Dense(15,input_dim=X_train.shape[1],activation='relu'),\n","    tf.keras.layers.Dense(10, activation=\"linear\"),\n","    tf.keras.layers.Dense(1)\n","])\n"],"metadata":{"id":"L4Gous_A_1T9","executionInfo":{"status":"ok","timestamp":1701025116679,"user_tz":-330,"elapsed":2929,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["model.compile(loss='mean_squared_error',optimizer='adam',metrics=\"mae\")"],"metadata":{"id":"6u6dMZ5G_5wz","executionInfo":{"status":"ok","timestamp":1701025143351,"user_tz":-330,"elapsed":403,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["history = model.fit(X_train,Y_train, epochs=150, batch_size=10, validation_split=0.1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RQ_wzfWy_-EG","executionInfo":{"status":"ok","timestamp":1701025391593,"user_tz":-330,"elapsed":242336,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"3574d3df-2af3-46bb-9151-10a1fba27cc4"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 5260.1001 - mae: 54.1768 - val_loss: 336.3354 - val_mae: 14.3071\n","Epoch 2/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 201.9131 - mae: 10.6293 - val_loss: 149.2643 - val_mae: 8.6660\n","Epoch 3/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 101.1323 - mae: 7.0879 - val_loss: 84.0036 - val_mae: 6.1429\n","Epoch 4/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 59.5554 - mae: 5.2943 - val_loss: 52.2011 - val_mae: 4.7801\n","Epoch 5/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 35.9381 - mae: 4.0724 - val_loss: 33.5358 - val_mae: 3.7135\n","Epoch 6/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 20.2838 - mae: 3.0427 - val_loss: 20.6629 - val_mae: 2.8667\n","Epoch 7/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 11.5015 - mae: 2.2968 - val_loss: 11.5888 - val_mae: 2.1147\n","Epoch 8/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 6.7141 - mae: 1.7536 - val_loss: 7.0023 - val_mae: 1.6432\n","Epoch 9/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 3.8867 - mae: 1.3055 - val_loss: 4.1410 - val_mae: 1.2489\n","Epoch 10/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 2.1682 - mae: 0.9743 - val_loss: 2.5017 - val_mae: 1.1788\n","Epoch 11/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 1.3613 - mae: 0.7895 - val_loss: 1.5069 - val_mae: 0.7989\n","Epoch 12/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 1.0405 - mae: 0.7098 - val_loss: 1.1173 - val_mae: 0.7262\n","Epoch 13/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.8745 - mae: 0.6576 - val_loss: 0.8832 - val_mae: 0.6528\n","Epoch 14/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.7761 - mae: 0.6285 - val_loss: 0.7386 - val_mae: 0.5586\n","Epoch 15/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.7424 - mae: 0.6203 - val_loss: 0.7995 - val_mae: 0.6312\n","Epoch 16/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.7150 - mae: 0.6074 - val_loss: 1.0661 - val_mae: 0.7691\n","Epoch 17/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.7132 - mae: 0.6078 - val_loss: 0.6353 - val_mae: 0.5268\n","Epoch 18/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6666 - mae: 0.5866 - val_loss: 0.6425 - val_mae: 0.5374\n","Epoch 19/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6708 - mae: 0.5889 - val_loss: 0.7411 - val_mae: 0.6132\n","Epoch 20/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6878 - mae: 0.5997 - val_loss: 0.7736 - val_mae: 0.5972\n","Epoch 21/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6726 - mae: 0.5988 - val_loss: 0.6439 - val_mae: 0.5289\n","Epoch 22/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6607 - mae: 0.5934 - val_loss: 0.9136 - val_mae: 0.7155\n","Epoch 23/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6637 - mae: 0.5966 - val_loss: 0.6292 - val_mae: 0.5569\n","Epoch 24/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6427 - mae: 0.5813 - val_loss: 0.7271 - val_mae: 0.6687\n","Epoch 25/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6515 - mae: 0.5873 - val_loss: 0.5653 - val_mae: 0.5039\n","Epoch 26/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6687 - mae: 0.5963 - val_loss: 0.7016 - val_mae: 0.6084\n","Epoch 27/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6554 - mae: 0.5911 - val_loss: 0.5744 - val_mae: 0.5278\n","Epoch 28/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6703 - mae: 0.5958 - val_loss: 0.5679 - val_mae: 0.5341\n","Epoch 29/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6218 - mae: 0.5779 - val_loss: 0.5563 - val_mae: 0.5024\n","Epoch 30/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6355 - mae: 0.5816 - val_loss: 0.6732 - val_mae: 0.5650\n","Epoch 31/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6490 - mae: 0.5930 - val_loss: 0.6235 - val_mae: 0.5387\n","Epoch 32/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6459 - mae: 0.5892 - val_loss: 0.5581 - val_mae: 0.5301\n","Epoch 33/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6487 - mae: 0.5848 - val_loss: 0.7402 - val_mae: 0.6202\n","Epoch 34/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6425 - mae: 0.5858 - val_loss: 0.5698 - val_mae: 0.5246\n","Epoch 35/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6026 - mae: 0.5685 - val_loss: 0.5258 - val_mae: 0.5063\n","Epoch 36/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6276 - mae: 0.5754 - val_loss: 0.8012 - val_mae: 0.7078\n","Epoch 37/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6413 - mae: 0.5871 - val_loss: 0.6556 - val_mae: 0.6069\n","Epoch 38/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6424 - mae: 0.5876 - val_loss: 0.6799 - val_mae: 0.5642\n","Epoch 39/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6085 - mae: 0.5721 - val_loss: 0.8264 - val_mae: 0.6081\n","Epoch 40/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5957 - mae: 0.5684 - val_loss: 0.8252 - val_mae: 0.6561\n","Epoch 41/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6128 - mae: 0.5745 - val_loss: 0.6529 - val_mae: 0.5924\n","Epoch 42/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6198 - mae: 0.5731 - val_loss: 0.6169 - val_mae: 0.6047\n","Epoch 43/150\n","1016/1016 [==============================] - 3s 3ms/step - loss: 0.6085 - mae: 0.5675 - val_loss: 0.5540 - val_mae: 0.5429\n","Epoch 44/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6223 - mae: 0.5733 - val_loss: 0.5373 - val_mae: 0.5199\n","Epoch 45/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6126 - mae: 0.5747 - val_loss: 0.7268 - val_mae: 0.6503\n","Epoch 46/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6179 - mae: 0.5751 - val_loss: 0.5389 - val_mae: 0.5245\n","Epoch 47/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6076 - mae: 0.5703 - val_loss: 0.6793 - val_mae: 0.6258\n","Epoch 48/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5978 - mae: 0.5664 - val_loss: 0.6396 - val_mae: 0.5694\n","Epoch 49/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5904 - mae: 0.5605 - val_loss: 0.6350 - val_mae: 0.5663\n","Epoch 50/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6304 - mae: 0.5832 - val_loss: 0.8216 - val_mae: 0.6490\n","Epoch 51/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6052 - mae: 0.5714 - val_loss: 0.6620 - val_mae: 0.5975\n","Epoch 52/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6052 - mae: 0.5700 - val_loss: 0.6650 - val_mae: 0.5875\n","Epoch 53/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6408 - mae: 0.5842 - val_loss: 0.7506 - val_mae: 0.5839\n","Epoch 54/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6118 - mae: 0.5760 - val_loss: 0.6429 - val_mae: 0.5593\n","Epoch 55/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5947 - mae: 0.5613 - val_loss: 0.7164 - val_mae: 0.6430\n","Epoch 56/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6084 - mae: 0.5719 - val_loss: 0.5153 - val_mae: 0.5118\n","Epoch 57/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6007 - mae: 0.5689 - val_loss: 0.6630 - val_mae: 0.5855\n","Epoch 58/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6061 - mae: 0.5710 - val_loss: 0.8988 - val_mae: 0.7148\n","Epoch 59/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6084 - mae: 0.5698 - val_loss: 0.5697 - val_mae: 0.5574\n","Epoch 60/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6000 - mae: 0.5726 - val_loss: 0.5734 - val_mae: 0.5374\n","Epoch 61/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5944 - mae: 0.5672 - val_loss: 0.6222 - val_mae: 0.5705\n","Epoch 62/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6185 - mae: 0.5783 - val_loss: 0.6155 - val_mae: 0.5651\n","Epoch 63/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6157 - mae: 0.5749 - val_loss: 0.5285 - val_mae: 0.5170\n","Epoch 64/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5995 - mae: 0.5695 - val_loss: 0.5048 - val_mae: 0.4994\n","Epoch 65/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6329 - mae: 0.5778 - val_loss: 0.5208 - val_mae: 0.4772\n","Epoch 66/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5848 - mae: 0.5583 - val_loss: 0.7347 - val_mae: 0.5874\n","Epoch 67/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6045 - mae: 0.5674 - val_loss: 0.7530 - val_mae: 0.6710\n","Epoch 68/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5912 - mae: 0.5633 - val_loss: 0.5201 - val_mae: 0.5174\n","Epoch 69/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5957 - mae: 0.5695 - val_loss: 0.5118 - val_mae: 0.5021\n","Epoch 70/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6051 - mae: 0.5657 - val_loss: 0.4800 - val_mae: 0.4843\n","Epoch 71/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6254 - mae: 0.5819 - val_loss: 0.6944 - val_mae: 0.6053\n","Epoch 72/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5992 - mae: 0.5639 - val_loss: 0.5867 - val_mae: 0.5231\n","Epoch 73/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5906 - mae: 0.5664 - val_loss: 0.6572 - val_mae: 0.6017\n","Epoch 74/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5896 - mae: 0.5659 - val_loss: 0.6110 - val_mae: 0.5458\n","Epoch 75/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6107 - mae: 0.5742 - val_loss: 0.5459 - val_mae: 0.5309\n","Epoch 76/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5792 - mae: 0.5575 - val_loss: 0.6234 - val_mae: 0.5429\n","Epoch 77/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5936 - mae: 0.5693 - val_loss: 0.6404 - val_mae: 0.6365\n","Epoch 78/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5955 - mae: 0.5684 - val_loss: 0.6479 - val_mae: 0.5765\n","Epoch 79/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6011 - mae: 0.5703 - val_loss: 0.5584 - val_mae: 0.5608\n","Epoch 80/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5850 - mae: 0.5584 - val_loss: 0.6076 - val_mae: 0.5839\n","Epoch 81/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5763 - mae: 0.5593 - val_loss: 0.8382 - val_mae: 0.7129\n","Epoch 82/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5957 - mae: 0.5701 - val_loss: 0.7094 - val_mae: 0.6527\n","Epoch 83/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6017 - mae: 0.5711 - val_loss: 0.5918 - val_mae: 0.5362\n","Epoch 84/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5738 - mae: 0.5550 - val_loss: 0.6294 - val_mae: 0.5907\n","Epoch 85/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6159 - mae: 0.5745 - val_loss: 0.5533 - val_mae: 0.5409\n","Epoch 86/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5880 - mae: 0.5632 - val_loss: 0.9709 - val_mae: 0.6480\n","Epoch 87/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5874 - mae: 0.5619 - val_loss: 0.5497 - val_mae: 0.5562\n","Epoch 88/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5942 - mae: 0.5659 - val_loss: 0.5162 - val_mae: 0.5138\n","Epoch 89/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5781 - mae: 0.5597 - val_loss: 0.6459 - val_mae: 0.5919\n","Epoch 90/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5937 - mae: 0.5669 - val_loss: 0.5995 - val_mae: 0.5651\n","Epoch 91/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6258 - mae: 0.5798 - val_loss: 0.7594 - val_mae: 0.6552\n","Epoch 92/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5908 - mae: 0.5643 - val_loss: 0.5080 - val_mae: 0.4983\n","Epoch 93/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5699 - mae: 0.5549 - val_loss: 0.5734 - val_mae: 0.5263\n","Epoch 94/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5834 - mae: 0.5614 - val_loss: 0.7436 - val_mae: 0.6694\n","Epoch 95/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5804 - mae: 0.5628 - val_loss: 0.6673 - val_mae: 0.5833\n","Epoch 96/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5888 - mae: 0.5665 - val_loss: 1.0150 - val_mae: 0.8138\n","Epoch 97/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5713 - mae: 0.5549 - val_loss: 0.8000 - val_mae: 0.6573\n","Epoch 98/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5942 - mae: 0.5650 - val_loss: 0.5149 - val_mae: 0.5104\n","Epoch 99/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5996 - mae: 0.5682 - val_loss: 0.5601 - val_mae: 0.5197\n","Epoch 100/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5867 - mae: 0.5627 - val_loss: 0.5572 - val_mae: 0.5763\n","Epoch 101/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6104 - mae: 0.5757 - val_loss: 0.5648 - val_mae: 0.5394\n","Epoch 102/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6088 - mae: 0.5689 - val_loss: 0.5580 - val_mae: 0.5124\n","Epoch 103/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5718 - mae: 0.5540 - val_loss: 0.6674 - val_mae: 0.5841\n","Epoch 104/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5834 - mae: 0.5591 - val_loss: 0.5260 - val_mae: 0.5283\n","Epoch 105/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5902 - mae: 0.5666 - val_loss: 0.7038 - val_mae: 0.5906\n","Epoch 106/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5874 - mae: 0.5595 - val_loss: 0.5356 - val_mae: 0.5359\n","Epoch 107/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5994 - mae: 0.5744 - val_loss: 0.5332 - val_mae: 0.5575\n","Epoch 108/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5827 - mae: 0.5609 - val_loss: 0.5425 - val_mae: 0.5480\n","Epoch 109/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5928 - mae: 0.5616 - val_loss: 0.7030 - val_mae: 0.6369\n","Epoch 110/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.6066 - mae: 0.5695 - val_loss: 0.5720 - val_mae: 0.5742\n","Epoch 111/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5778 - mae: 0.5591 - val_loss: 0.5307 - val_mae: 0.5357\n","Epoch 112/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6138 - mae: 0.5734 - val_loss: 0.5234 - val_mae: 0.5115\n","Epoch 113/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5930 - mae: 0.5662 - val_loss: 0.6285 - val_mae: 0.5427\n","Epoch 114/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.6304 - mae: 0.5742 - val_loss: 0.5157 - val_mae: 0.5400\n","Epoch 115/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5884 - mae: 0.5626 - val_loss: 0.6774 - val_mae: 0.5896\n","Epoch 116/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5953 - mae: 0.5670 - val_loss: 0.6790 - val_mae: 0.6082\n","Epoch 117/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5868 - mae: 0.5635 - val_loss: 0.5522 - val_mae: 0.5634\n","Epoch 118/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5840 - mae: 0.5624 - val_loss: 0.6410 - val_mae: 0.6315\n","Epoch 119/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.6070 - mae: 0.5709 - val_loss: 0.6175 - val_mae: 0.6035\n","Epoch 120/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5732 - mae: 0.5565 - val_loss: 0.6162 - val_mae: 0.5678\n","Epoch 121/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5642 - mae: 0.5521 - val_loss: 0.5790 - val_mae: 0.5677\n","Epoch 122/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5680 - mae: 0.5565 - val_loss: 0.5771 - val_mae: 0.5775\n","Epoch 123/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5436 - mae: 0.5471 - val_loss: 0.6420 - val_mae: 0.5936\n","Epoch 124/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5734 - mae: 0.5603 - val_loss: 0.5831 - val_mae: 0.5505\n","Epoch 125/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5406 - mae: 0.5432 - val_loss: 0.4939 - val_mae: 0.5249\n","Epoch 126/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5363 - mae: 0.5400 - val_loss: 0.4923 - val_mae: 0.5172\n","Epoch 127/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5305 - mae: 0.5329 - val_loss: 0.4475 - val_mae: 0.4846\n","Epoch 128/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5271 - mae: 0.5372 - val_loss: 0.6710 - val_mae: 0.6327\n","Epoch 129/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5084 - mae: 0.5230 - val_loss: 0.4620 - val_mae: 0.5073\n","Epoch 130/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5299 - mae: 0.5325 - val_loss: 0.3807 - val_mae: 0.4440\n","Epoch 131/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5197 - mae: 0.5298 - val_loss: 0.4839 - val_mae: 0.5160\n","Epoch 132/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5159 - mae: 0.5277 - val_loss: 0.4344 - val_mae: 0.4800\n","Epoch 133/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5359 - mae: 0.5377 - val_loss: 0.8375 - val_mae: 0.6815\n","Epoch 134/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5176 - mae: 0.5277 - val_loss: 0.4440 - val_mae: 0.4911\n","Epoch 135/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5252 - mae: 0.5359 - val_loss: 0.4138 - val_mae: 0.4793\n","Epoch 136/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5062 - mae: 0.5207 - val_loss: 0.4520 - val_mae: 0.4883\n","Epoch 137/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5174 - mae: 0.5296 - val_loss: 0.4500 - val_mae: 0.4950\n","Epoch 138/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5219 - mae: 0.5302 - val_loss: 0.4279 - val_mae: 0.4744\n","Epoch 139/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5160 - mae: 0.5273 - val_loss: 0.5080 - val_mae: 0.5346\n","Epoch 140/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5134 - mae: 0.5252 - val_loss: 0.5090 - val_mae: 0.5324\n","Epoch 141/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.4910 - mae: 0.5107 - val_loss: 0.5025 - val_mae: 0.5037\n","Epoch 142/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5139 - mae: 0.5253 - val_loss: 0.6337 - val_mae: 0.6064\n","Epoch 143/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5032 - mae: 0.5179 - val_loss: 0.6805 - val_mae: 0.6391\n","Epoch 144/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5339 - mae: 0.5289 - val_loss: 0.4294 - val_mae: 0.4845\n","Epoch 145/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5116 - mae: 0.5210 - val_loss: 0.4934 - val_mae: 0.5150\n","Epoch 146/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5000 - mae: 0.5197 - val_loss: 0.4377 - val_mae: 0.4790\n","Epoch 147/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5171 - mae: 0.5259 - val_loss: 0.6112 - val_mae: 0.5457\n","Epoch 148/150\n","1016/1016 [==============================] - 2s 2ms/step - loss: 0.5173 - mae: 0.5231 - val_loss: 0.4067 - val_mae: 0.4520\n","Epoch 149/150\n","1016/1016 [==============================] - 1s 1ms/step - loss: 0.5268 - mae: 0.5318 - val_loss: 0.4150 - val_mae: 0.4600\n","Epoch 150/150\n","1016/1016 [==============================] - 2s 1ms/step - loss: 0.5091 - mae: 0.5229 - val_loss: 0.3843 - val_mae: 0.4420\n"]}]},{"cell_type":"code","source":["loss = model.evaluate(X_test, Y_test)\n","print(\"Test Loss:\", loss)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_LuSONeWAOlH","executionInfo":{"status":"ok","timestamp":1701025391593,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"41a28805-3b03-499d-dd9d-512d26c4f2f6"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["118/118 [==============================] - 0s 1ms/step - loss: 0.3751 - mae: 0.4509\n","Test Loss: [0.3750586211681366, 0.4509495496749878]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(history.history[\"loss\"])\n","plt.plot(history.history[\"val_loss\"])\n","plt.title(\"Model Loss\")\n","plt.xlabel(\"Echo\")\n","plt.ylabel(\"Loss\")\n","plt.legend([\"Train\",\"Validation\"],loc=\"upper left\")\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"lI2JJZcOA9V4","executionInfo":{"status":"ok","timestamp":1701025408936,"user_tz":-330,"elapsed":1314,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"ca302427-a528-4102-9757-6ec737d12cef"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","import matplotlib.pyplot as plt\n","\n","plt.plot(history.history[\"mae\"])\n","plt.plot(history.history[\"val_mae\"])\n","plt.title(\"Model mae\")\n","plt.xlabel(\"Echo\")\n","plt.ylabel(\"mae\")\n","plt.legend([\"Train\",\"validation\"],loc=\"upper left\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"XYX10iUfBCiG","executionInfo":{"status":"ok","timestamp":1701025429321,"user_tz":-330,"elapsed":509,"user":{"displayName":"Sai Teja","userId":"08303470542056495693"}},"outputId":"4ed94abe-b1bf-48fd-8999-419cd64d54d5"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}